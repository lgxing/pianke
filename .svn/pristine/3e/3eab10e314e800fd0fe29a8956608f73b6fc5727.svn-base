package com.lamp.gxpk;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.graphics.Bitmap;
import android.media.ThumbnailUtils;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore.Images.Thumbnails;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import android.widget.TextView;

import com.lamp.gxpk.adapter.LocalVideoGvAdapter;
import com.lamp.gxpk.base.BaseActivity;
import com.lamp.gxpk.base.BaseInterface;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;

/**
 * 查看本地作品的Activity
 * 
 * @author Administrator
 * 
 */
public class LocalVideoActivity extends BaseActivity implements BaseInterface {

	// 显示本地作品缩略图的GridView
	@ViewInject(R.id.act_localvideo_grid)
	private GridView gv;
	// 选择TextView
	@ViewInject(R.id.act_localvideo_select)
	private TextView select;
	// 取消的TextView
	@ViewInject(R.id.act_localvideo_cancel)
	private TextView cancel;

	// 显示的数据源
	private List<Bitmap> imgs;
	// 显示的视频文件
	private File[] files;
	// 显示视频文件缩略图的Adapter
	private LocalVideoGvAdapter adapter;

	@Override
	protected void onCreate(Bundle arg0) {
		// TODO Auto-generated method stub
		super.onCreate(arg0);
		initViews();
		initDatas();
		initOper();
	}

	// 初始化View
	@Override
	public void initViews() {
		setContentView(R.layout.act_localvideo);
		ViewUtils.inject(getAct());
	}

	// 初始化数据
	@Override
	public void initDatas() {
		int code = getIntent().getIntExtra("code", -1);
		File file = null;
		if (code == 1) {
			// 本地作品
			file = new File(Environment.getExternalStorageDirectory()
					.getAbsolutePath() + "/gxpk/local");
		} else if (code == 2) {
			// 我的下载
			file = new File(Environment.getExternalStorageDirectory()
					.getAbsolutePath() + "/gxpk/download");
		}
		imgs = new ArrayList<Bitmap>();
		files = file.listFiles();
		if(files==null){
			toastShort("没有视频哦~");
			return;
		}
		for (int i = 0; i < files.length; i++) {
			Bitmap bit = ThumbnailUtils.createVideoThumbnail(
					files[i].getAbsolutePath(), Thumbnails.MINI_KIND);
			imgs.add(bit);
		}
	}

	// 初始化操作
	@Override
	public void initOper() {
		if (imgs != null && imgs.size() > 0) {
			adapter = new LocalVideoGvAdapter(imgs, getAct());
			gv.setAdapter(adapter);
		}

		gv.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				Intent intent = new Intent(Intent.ACTION_VIEW);
				intent.setDataAndType(Uri.parse(files[(int) arg3].getAbsolutePath()), "video/mp4");
				startActivity(intent);
			}
		});
		// 选择按钮的监听事件
		select.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				select.setVisibility(View.INVISIBLE);
				cancel.setVisibility(View.VISIBLE);
			}
		});
		// 取消按钮的监听事件
		cancel.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				select.setVisibility(View.VISIBLE);
				cancel.setVisibility(View.INVISIBLE);
			}
		});
	}

	// 返回键的监听
	@OnClick(R.id.act_localvideo_back)
	public void onBackClick(View v) {
		finish();
	}

	@OnClick(R.id.act_localvideo_delete)
	public void onDeleteClick(View v) {

	}

}
