package com.lamp.gxpk;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import android.graphics.Bitmap;
import android.media.ThumbnailUtils;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore.Images.Thumbnails;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.GridView;
import android.widget.TextView;

import com.lamp.gxpk.adapter.LocalVideoGvAdapter;
import com.lamp.gxpk.base.BaseActivity;
import com.lamp.gxpk.base.BaseInterface;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;

/**
 * 查看本地作品的Activity
 * @author Administrator
 *
 */
public class LocalVideoActivity extends BaseActivity implements BaseInterface {

	
	//显示本地作品缩略图的GridView
	@ViewInject(R.id.act_localvideo_grid)
	private GridView gv;
	//选择TextView
	@ViewInject(R.id.act_localvideo_select)
	private TextView select;
	//取消的TextView
	@ViewInject(R.id.act_localvideo_cancel)
	private TextView cancel;
	
	//显示的数据源
	private List<Bitmap> imgs; 
	
	private File[] files;
	private LocalVideoGvAdapter adapter;
	
	
	@Override
	protected void onCreate(Bundle arg0) {
		// TODO Auto-generated method stub
		super.onCreate(arg0);
		initViews();
		initDatas();
		initOper();
	}
	
	
	@Override
	public void initViews() {
		setContentView(R.layout.act_localvideo);
		ViewUtils.inject(getAct());
	}

	@Override
	public void initDatas() {
		File file = new File(Environment.getExternalStorageDirectory().getAbsolutePath()+"/gxck");
		imgs = new ArrayList<Bitmap>();
		files = file.listFiles();
		for(int i=0;i<files.length;i++){
			Bitmap bit = ThumbnailUtils.createVideoThumbnail(files[i].getAbsolutePath(), Thumbnails.MINI_KIND);
			imgs.add(bit);
		}
	}

	@Override
	public void initOper() {
		adapter = new LocalVideoGvAdapter(imgs, getAct());
		gv.setAdapter(adapter);
		
		
		//选择按钮的监听事件
		select.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				select.setVisibility(View.INVISIBLE);
				cancel.setVisibility(View.VISIBLE);
			}
		});
		//取消按钮的监听事件
		cancel.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				select.setVisibility(View.VISIBLE);
				cancel.setVisibility(View.INVISIBLE);
			}
		});
	}
	
	//返回键的监听
	@OnClick(R.id.act_localvideo_back)
	public void onBackClick(View v){
		finish();
	}
	
	@OnClick(R.id.act_localvideo_delete)
	public void onDeleteClick(View v){
		
	}

}
